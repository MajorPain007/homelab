global:
  checkNewVersion: false
  sendAnonymousUsage: false

# -- (Optional) Change Log Level and Format here...
#     - loglevels [DEBUG, INFO, WARNING, ERROR, CRITICAL]
#     - format [common, json, logfmt]

# -- (Optional) Enable Accesslog and change Format here...
#     - format [common, json, logfmt]
Log:
  level: INFO
  filePath: /var/log/traefik/traefik.log
accessLog:
  filePath: /var/log/traefik/access.log

# -- (Optional) Enable Accesslog and change Format here...
#     - format [common, json, logfmt]

# -- (Optional) Enable API and Dashboard here, don't do in production
api:
  dashboard: true
  insecure: true

experimental:
  plugins:
    crowdsec-bouncer-traefik-plugin:
      moduleName: "github.com/maxlerebourg/crowdsec-bouncer-traefik-plugin"
      version: "v1.3.3"

# -- Change EntryPoints here...
entryPoints:
  web:
    address: :80
    # -- (Optional) Redirect all HTTP to HTTPS
    http:
      middlewares:
        - authelia@file
        - crowdsec@file
      redirections:
        entryPoint:
          to: websecure
          scheme: https
  websecure:
    address: :443
    http:
      tls:
        certResolver: production
        domains:
          - main: "example.com"
            sans:
              - "*.example.com"
      middlewares:
        - authelia@file
        - securityHeaders@file
        - crowdsec@file

# -- Configure your CertificateResolver here...
certificatesResolvers:
  staging:
    acme:
      email: example@example.com
      storage: /etc/traefik/certs/acme.json
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: ipv64
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"
  production:
    acme:
      email: example@example.com
      storage: /etc/traefik/certs/acme.json
      caServer: "https://acme-v02.api.letsencrypt.org/directory"
      dnsChallenge:
        provider: ipv64
        resolvers:
          - "1.1.1.1:53"
          - "8.8.8.8:53"

# -- (Optional) Disable TLS Cert verification check
# serversTransport:
#   insecureSkipVerify: true


providers:
  docker:
    # -- (Optional) Enable this, if you want to expose all containers automatically
    network: proxy    # Add Your Docker Network Name Here
    defaultRule: "Host(`{{ index .Labels \"com.docker.compose.service\"}}.example.com`)"    # Replace with your domain
    # Default host rule to containername.domain.example
    exposedByDefault: false

  file:
    filename: /etc/traefik/conf/fileConfig.yaml
    # directory: /etc/traefik/conf/fileConfig.yaml
    watch: true
