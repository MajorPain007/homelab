services:
  unifi-network-application:
    image: ${SERVICES_UNIFI-NETWORK-APPLICATION_IMAGE:-lscr.io/linuxserver/unifi-network-application}:${SERVICES_UNIFI-NETWORK-APPLICATION_IMAGE_VERSION:-latest}
    container_name: ${SERVICES_UNIFI-NETWORK-APPLICATION_CONTAINER_NAME:-unifi-network-application}
    hostname: ${SERVICES_UNIFI-NETWORK-APPLICATION_HOSTNAME:-unifi-network-application}
    environment:
      - PUID=99
      - PGID=100
      - TZ=Etc/UTC
      - MONGO_USER=unifi
      - MONGO_PASS=
      - MONGO_HOST=unifi-db
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MEM_LIMIT=1024 #optional
      - MEM_STARTUP=1024 #optional
    #   - MONGO_TLS= #optional
    #   - MONGO_AUTHSOURCE= #optional
    volumes:
      - ./unifi-controller:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: unless-stopped
    networks:
      - backend
  unifi-db:
    image: ${SERVICES_UNIFI-DB_IMAGE:-docker.io/mongo}:${SERVICES_UNIFI-DB_IMAGE_VERSION:-4.4}
    container_name: ${SERVICES_UNIFI-DB_CONTAINER_NAME:-unifi-db}
    hostname: ${SERVICES_UNIFI-DB_HOSTNAME:-unifi-db}
    volumes:
      - ./unifi-controller-db:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    restart: unless-stopped
    networks:
      - backend
networks:
  backend:
    external: true
