#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich
services:
  immich-server:
    container_name: ${SERVICES_IMMICH-SERVER_CONTAINER_NAME:-immich_server}
    hostname: ${SERVICES_IMMICH-SERVER_HOSTNAME:-immich_server}
    image: ${SERVICES_IMMICH-SERVER_IMAGE:-ghcr.io/immich-app/immich-server:${IMMICH_VERSION}:${SERVICES_IMMICH-SERVER_IMAGE_VERSION:--release}
    extends:
      file: hwaccel.transcoding.yml
      service: quicksync # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - /mnt/user/Daten/Bilder/Bilder:/import
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    ports:
      - 2283:2283
    depends_on:
      - redis
      - database
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.immich.entrypoints=homesec
      - traefik.http.routers.immich.rule=Host(`${DOMAIN}`)
      - net.unraid.docker.managed=composeman
      - net.unraid.docker.webui=http://[IP]:[PORT:2283]
      - net.unraid.docker.icon=https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/immich.png
    healthcheck:
      disable: false
    networks:
      - backend
      - frontend
  immich-machine-learning:
    container_name: ${SERVICES_IMMICH-MACHINE-LEARNING_CONTAINER_NAME:-immich_machine_learning}
    hostname: ${SERVICES_IMMICH-MACHINE-LEARNING_HOSTNAME:-immich_machine_learning}
    # For hardware acceleration, add one of -[armnn, cuda, openvino] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ${SERVICES_IMMICH-MACHINE-LEARNING_IMAGE:-ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION}:${SERVICES_IMMICH-MACHINE-LEARNING_IMAGE_VERSION:--release}
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    volumes:
      - ./immich/model-cache:/cache
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      disable: false
    labels:
      - net.unraid.docker.managed=composeman
      - net.unraid.docker.icon=https://raw.githubusercontent.com/imagegenius/templates/main/unraid/img/immich.png
    networks:
      - backend
  redis:
    container_name: ${SERVICES_REDIS_CONTAINER_NAME:-immich_redis}
    hostname: ${SERVICES_REDIS_HOSTNAME:-immich_redis}
    image: ${SERVICES_REDIS_IMAGE:-docker.io/redis:6.2-alpine@sha256}:${SERVICES_REDIS_IMAGE_VERSION:-eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8}
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    labels:
      - net.unraid.docker.managed=composeman
      - net.unraid.docker.icon=https://raw.githubusercontent.com/juusujanar/unraid-templates/master/img/Redis-logo.png
    networks:
      - backend
  database:
    container_name: ${SERVICES_DATABASE_CONTAINER_NAME:-immich_postgres}
    hostname: ${SERVICES_DATABASE_HOSTNAME:-immich_postgres}
    image: ${SERVICES_DATABASE_IMAGE:-docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256}:${SERVICES_DATABASE_IMAGE_VERSION:-90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME:-immich}
      POSTGRES_DB: ${DB_DATABASE_NAME:-immich}
      POSTGRES_INITDB_ARGS: --data-checksums
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" ||
        exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}"
        --username="$${POSTGRES_USER}" --tuples-only --no-align
        --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM
        pg_stat_database')"; echo "checksum failure count is $$Chksum"; [
        "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: postgres -c shared_preload_libraries=vectors.so -c
      'search_path="$$user", public, vectors' -c logging_collector=on -c
      max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped
    labels:
      - net.unraid.docker.managed=composeman
      - net.unraid.docker.icon=https://github.com/juusujanar/unraid-templates/raw/master/img/PostgreSQL-logo.png
    networks:
      - backend
networks:
  backend:
    external: true
  frontend:
    external: true
